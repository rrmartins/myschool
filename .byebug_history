c
    end
      p id
ids.each do |id|
    end
      p id
ids.each do |id|
ids = (self.ids.count>1) ? self.ids.uniq! : self.ids
    end
      p id
((self.ids.count>1) ? self.ids.uniq! : self.ids).each do |id|
    end
      p id
((self.ids.count>1) ? self.ids.uniq! : self.ids).each do |id|
self.student_ids = (self.ids.count>1) ? self.ids.uniq! : self.ids
self.ids.count
ids
ids = self.ids.uniq!
self.ids << "2"
ids = self.ids.uniq
ids
ids = self.ids.uniq!
self.ids.uniq!
self.ids.uniq
self.ids
self.student_ids
self.student_ids = self.ids.uniq!
self.student_ids
self.student_ids = self.ids.split(",").uniq!
self.ids.split(",").uniq!
self.student_ids
self.ids
self
c
self.student_id
self.student_ids
self.students
self.student
self.courses
self
c
self.student_ids
self
@course.student_idsself
c
@course.student_ids
@course.student_ids = params[:course][:student_tokens].split(",").uniq
params[:course][:student_tokens].split(",").uniq
params[:course][:student_tokens].split(",").uniq!
@course.student_ids = params[:course][:student_tokens].split(",")
params[:course][:student_tokens].split(",").uniq
params[:course][:student_tokens].split(",")
params[:course][:student_tokens].split(",").uniq!
@course.student_ids
@course.student_ids = params[:course][:student_tokens].split(",").uniq!
@course.student_ids
@course.student_token
@course
@course.student_tokens = params[:course][:student_tokens]
params[:course][:student_tokens]
params[:cours][:student_tokens]
params[:id]
@course
params
c
params
self.student_ids = ids.split(",").uniq!
self.student_ids
c
self.classrooms
self.classroom
self.student_ids = ids.split(",").uniq!
ids
continue
ids.split(",").uniq!
ids
ids.split(",").uniq
ids.split(",")
ids
exit
@course.students
@course
params
exit
@students.map(&:attributes).to_json
@students.map(&:attributes)
@students
exit
@student.errors
@student.valid?
@student.active?
@student.status
@student
params
